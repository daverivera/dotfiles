- defaults:
    link:
      relink: true
      create: true

- clean: ['~']

- link:
    # ZSH
    ~/.zshrc: zshrc
    ~/.oh-my-zsh: oh-my-zsh/
    ~/.zsh_custom: 
        blob: true 
        create: true
        path: zsh_custom/


    # Git
    ~/.gitconfig: gitconfig

    # Vim
    ~/.vim: vim/
    ~/.vimrc: vimrc

    # NeoVim
    ~/.config/nvim/init.vim: nvim/init.vim
    ~/.config/nvim/config: nvim/config/

    # Tmux
    ~/.tmux.conf: tmux/tmux
    ~/.tmuxinator.zsh: tmux/tmuxinator.zsh
    # ~/.tmuxinator:
      #path: tmux/tmuxinator/
      #force: true

    # Javascript
    ~/.tern-config.conf: tern-config

    # Mayus to CTRL - Depends: install xorg-xmodmap
    ~/.Xmodmap: Xmodmap

    #~/.zprofile:
    #    path: zprofile
    #    force: true

    # urxvt
    #~/.Xresources:
    #    path: Xresources
    #    force: true
    
    # Termite
    ~/.config/termite/config: config/termite/config

    # i3wm
    ~/.config/i3/config: config/i3/config
    ~/.config/i3status/config: config/i3status/config

    # Polybar 
    ~/.config/polybar:
        glob: true
        create: true
        path: config/polybar
        
    # Rofi
    ~/.config/rofi:
        glob: true
        create: true
        path: config/rofi
        #relink: true


    # Dunst
    ~/.config/dunst/dunstrc: config/dunst/dunstrc


- shell:
    -
        # WATCH OUT: ./scripts/update executes with $PWD equals to this dotfiles repo's root directory;
        #            in this case, it is $HOME/dotfiles/
        command: 'git submodule update --init --recursive --remote && ./install/update'
        description: 'Fetching and updating submodules'
    -
        command: 'mkdir -p ~/.vim/backup ~/.vim/swap ~/.vim/undo'
        description: 'Creating backup directories for Vim'
    #-
        #command: 'vim +PluginClean +PluginInstall +qall'
        #description: 'Installing Vim Vundle managed plugins'
    #-
        #command: 'mkdir -p ~/.zsh_custom/themes'
        #description: 'Creating Oh My ZSH custom directory'
    -
        command: 'mkdir -p ~/.config/nvim/undo'
        description: 'Creating backup directories for NeoVim'
    #-
        #command: 'mkdir -p ~/.config/i3status'
        #description: 'Creating config folder for i3status'
    -
        command: 'pip3 install neovim --user'
        description: 'Installing Python neovim module'
    -
        command: 'curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
        description: 'Downloading NeoVim plugin manager'
    -
        command: 'nvim +PlugClean +PlugInstall +qall'
        description: 'Installing NeoVim managed plugins'
